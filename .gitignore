import logging

from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup

bot = Bot(token="6143582322:AAEaGLFFSByoFoL4ZIrpkSS-snAHNisXTjY")
dp = Dispatcher(bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)


class Korpus(StatesGroup):
    korpus = State()
    etazh = State()


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
    itembtn1 = types.KeyboardButton('Корпус А')
    itembtn2 = types.KeyboardButton('Корпус Б')
    itembtn3 = types.KeyboardButton('Корпус В')
    itembtn4 = types.KeyboardButton('Корпус Г')
    itembtn5 = types.KeyboardButton('Корпус Д')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5)

    await message.answer('Выберите корпус:', reply_markup=markup)
    await Korpus.korpus.set()


@dp.message_handler(state=Korpus.korpus)
async def select_floor(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['korpus'] = message.text
    if data['korpus'] not in ['Корпус А', 'Корпус Б', 'Корпус В', 'Корпус Г', 'Корпус Д']:
        await message.answer('Неправильный ввод. Выберите корпус из предложенных вариантов:')
        await send_welcome(message)
        return
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
    itembtn1 = types.KeyboardButton('0 этаж')
    itembtn2 = types.KeyboardButton('1 этаж')
    itembtn3 = types.KeyboardButton('2 этаж')
    itembtn4 = types.KeyboardButton('3 этаж')
    itembtn5 = types.KeyboardButton('4 этаж')
    itembtn_back = types.KeyboardButton('Назад')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5, itembtn_back)
    await message.answer(f"Вы выбрали {message.text}, выберите этаж:", reply_markup=markup)
    await Korpus.next()


@dp.message_handler(Text(equals=['Назад']), state=Korpus.etazh)
async def back_to_korpus(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['etazh'] = None

    await send_welcome(message)


@dp.message_handler(state=Korpus.etazh)
async def select_etazh(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['etazh'] = message.text[0]

    if data['etazh'] not in ['0', '1', '2', '3', '4']:
        await message.answer('Неправильный ввод. Выберите этаж из предложенных вариантов:')
        await Korpus.etazh.set()
        return

    if data['korpus'] != 'Корпус А' and data['etazh'] == '4' or data['etazh'] == '0' and data['korpus'] not in ['Корпус А', 'Корпус Б', 'Корпус Г']:
        await message.answer('Такого этажа нет в этом корпусе')
        await Korpus.etazh.set()
        return

    photo = types.InputFile(f"{data['korpus']} {data['etazh']}.png")
    await message.answer_photo(photo)

    await Korpus.korpus.set()
    await send_welcome(message)

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
